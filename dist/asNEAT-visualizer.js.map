{"version":3,"sources":["..\\tmp\\transpiled\\asNEAT-visualizer.js","..\\tmp\\transpiled\\forceVisualization.js","..\\tmp\\transpiled\\graph.js","..\\tmp\\transpiled\\instrumentVisualization.js","..\\tmp\\transpiled\\liveSpectrogram.js","..\\tmp\\transpiled\\multiVisualization.js","..\\tmp\\transpiled\\networkVisualization.js","..\\tmp\\transpiled\\offlineSpectrogram.js","..\\tmp\\transpiled\\vConnection.js","..\\tmp\\transpiled\\vNode.js"],"names":[],"mappings":"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","file":"asNEAT-visualizer.js","sourcesContent":["define(\"asNEAT/asNEAT-visualizer\", \n  [\"asNEAT/multiVisualization\",\"asNEAT/networkVisualization\",\"asNEAT/forceVisualization\",\"asNEAT/offlineSpectrogram\",\"asNEAT/liveSpectrogram\",\"asNEAT/instrumentVisualization\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __dependency6__, __exports__) {\n    \"use strict\";\n    \r\n    var MultiVisualization = __dependency1__[\"default\"];\n\n    var NetworkVisualization = __dependency2__[\"default\"];\n\n    var ForceVisualization = __dependency3__[\"default\"];\n\n    var OfflineSpectrogram = __dependency4__[\"default\"];\n\n    var LiveSpectrogram = __dependency5__[\"default\"];\n\n    var InstrumentVisualization = __dependency6__[\"default\"];\n\n    var Visualizer = {};\r\n    \r\n    Visualizer.createInstrumentVisualization = function(parameters) {\r\n        return new InstrumentVisualization(parameters);\r\n    };\r\n    \r\n    Visualizer.createMultiVisualization = function(parameters) {\r\n    \r\n      // TODO: Create other visualizations and pass them in\r\n      var visualizations = [];\r\n      visualizations.push(Visualizer.createLiveSpectrogram(parameters));\r\n      visualizations.push(Visualizer.createForceVisualization(parameters));\r\n      parameters.visualizations = visualizations;\r\n    \r\n      return new MultiVisualization(parameters);\r\n    };\r\n    \r\n    Visualizer.createNetworkVisualization = function(parameters) {\r\n      return new NetworkVisualization(parameters);\r\n    };\r\n    \r\n    Visualizer.createForceVisualization = function(parameters) {\r\n      return new ForceVisualization(parameters);\r\n    };\r\n    \r\n    Visualizer.createOfflineSpectrogram = function(parameters) {\r\n    \treturn new OfflineSpectrogram(parameters);\r\n    };\r\n    \r\n    Visualizer.createLiveSpectrogram = function(parameters) {\r\n      return new LiveSpectrogram(parameters);\r\n    };\r\n    \r\n    __exports__[\"default\"] = Visualizer;\n  });","define(\"asNEAT/forceVisualization\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var OscillatorNode = require('asNEAT/nodes/oscillatorNode')['default'],\r\n        NoteOscillatorNode = require('asNEAT/nodes/noteOscillatorNode')['default'],\r\n        OutNode = require('asNEAT/nodes/outNode')['default'],\r\n        VNode = require('asNEAT/vNode')['default'],\r\n        VConnection = require('asNEAT/vConnection')['default'],\r\n        Graph = require('asNEAT/graph')['default'];\r\n    \r\n    var ForceVisualization = function(parameters) {\r\n      _.defaults(this, parameters, this.defaultParameters);\r\n    };\r\n    ForceVisualization.prototype.defaultParameters = {\r\n      network: null,\r\n      // (num) for px, or (string) for %\r\n      width: \"100%\",\r\n      height: 600,\r\n      selector: '.forceNetwork',\r\n      animateSpeed: 750\r\n    };\r\n    \r\n    ForceVisualization.prototype.init = function() {\r\n      this.vNodes = [];\r\n      this.vConnections = [];\r\n      this.forceLayout = null;\r\n    };\r\n    \r\n    ForceVisualization.prototype.start = function() {\r\n      var self = this;\r\n    \r\n      var svg = d3.select(this.selector)\r\n        .append('svg')\r\n          .attr('width', this.width)\r\n          .attr('height', this.height)\r\n          .attr('pointer-events', 'all');\r\n    \r\n      // Have the back group watch for zoom events and move the forward group.\r\n      // This fixes the issue of dragging a node also call the zoom events\r\n      var backG = svg.append('g')\r\n          .call(d3.behavior.zoom().on('zoom', function() {\r\n            frontG.attr(\"transform\",\r\n              \"translate(\" + d3.event.translate + \")\" +\r\n              \" scale(\" + d3.event.scale + \")\");\r\n          }));\r\n    \r\n      var frontG = svg.append('g');\r\n    \r\n      backG.append('rect')\r\n        .attr('class', 'draggableRect')\r\n        .attr('fill', 'rgba(1,1,1,0)');\r\n    \r\n      frontG.append('g').attr('class', 'connections');\r\n      frontG.append('g').attr('class', 'labels');\r\n      frontG.append('g').attr('class', 'nodes');\r\n    \r\n      frontG.append('foreignObject')\r\n        .attr('class', 'parameterToolTip')\r\n        .attr(\"width\", 240)\r\n        .attr(\"height\", 500)\r\n        .append(\"xhtml:body\")\r\n          .style({\r\n            'display': 'none',\r\n            'font': \"14px 'Helvetica Neue'\",\r\n            'border-radius': '5px',\r\n            'background': 'rgba(180, 180, 180, 0.9)',\r\n            'margin': '10px',\r\n            'padding': '5px'\r\n          });\r\n    \r\n      this.svg = svg;\r\n      this.g = frontG;\r\n    \r\n      var color = {enabled:'black', disabled:'gray'};\r\n      var defs = frontG.append(\"defs\");\r\n    \r\n      defs.selectAll(\"marker\")\r\n        .data([\"asNEAT-force-viz-enabled\", \"asNEAT-force-viz-disabled\"])\r\n      .enter().append(\"marker\")\r\n        .attr(\"id\", function(d) { return d; })\r\n        .attr(\"viewBox\", \"0 -5 10 10\")\r\n        .attr(\"refX\", 20)\r\n        .attr(\"refY\", 0)\r\n        .attr(\"markerWidth\", 3)\r\n        .attr(\"markerHeight\", 3)\r\n        .attr(\"orient\", \"auto\")\r\n      .append(\"path\")\r\n        .attr(\"d\", \"M0,-5L10,0L0,5\");\r\n    \r\n      // Create a highlight filter that creates an\r\n      // orangish shadow under the element\r\n      var hFilter = defs.append('filter')\r\n        .attr('id', 'asNEAT-force-viz-')\r\n        .attr('height', '200%')\r\n        .attr('width', '200%')\r\n        .attr('x', \"-50%\").attr('y', \"-50%\");\r\n      // Create the drop shadow's blur\r\n      hFilter.append('feGaussianBlur')\r\n        .attr('in', 'SourceAlpha')\r\n        .attr(\"stdDeviation\", 2)\r\n        .attr('result', 'blur');\r\n      // Force to a specific color\r\n      hFilter.append('feColorMatrix')\r\n        .attr('in', 'blur')\r\n        .attr('type', 'matrix')\r\n        // [[a1 b2 c3 d4]...[a5 b5 c5 d5]] * [r g b a 1]\r\n        // so if only using [d] it forces to that color\r\n        // and mult a by 4 for a bolder highlight\r\n        .attr('values', '0 0 0 0 1  0 0 0 0 0.522  0 0 0 0 0.106  0 0 0 4 0')\r\n        .attr('result', 'coloredBlur');\r\n      // Merge the original svg element and the new highlight blur\r\n      var merge = hFilter.append('feMerge');\r\n      merge.append('feMergeNode')\r\n        .attr('in', 'coloredBlur');\r\n      merge.append('feMergeNode')\r\n        .attr('in', 'SourceGraphic');\r\n    \r\n      this.startForceLayout();\r\n      this.refresh();\r\n    \r\n      this.onResize = function() {\r\n        self.refresh();\r\n      };\r\n      $(window).on('resize', this.onResize);\r\n    };\r\n    ForceVisualization.prototype.stop = function() {\r\n      $(window).off('resize', this.onResize);\r\n      $(this.selector + \" svg\").remove();\r\n      this.forceLayout.alpha(0);\r\n    };\r\n    \r\n    /*\r\n      creates a representation of each node/connection in the network to be shown\r\n     **/\r\n    ForceVisualization.prototype.updateVisualizationNetwork = function() {\r\n    \r\n      var nodes = this.vNodes,\r\n          connections = this.vConnections;\r\n    \r\n      _.forEach(this.network.nodes, function(node) {\r\n        var vNode = _.find(nodes, {'asNEATNode': node});\r\n        if (vNode) return;\r\n        nodes.push(VNode.createVNodeFrom(node));\r\n      });\r\n    \r\n      _.forEach(this.network.connections, function(connection) {\r\n        var conn = _.find(connections, {'asNEATConnection': connection});\r\n        if (conn) return;\r\n    \r\n        // find the in/out nodes\r\n        var inIndex = _.findIndex(nodes, {'asNEATNode': connection.sourceNode}),\r\n            sourceNode = nodes[inIndex],\r\n            outIndex = _.findIndex(nodes, {'asNEATNode': connection.targetNode}),\r\n            targetNode = nodes[outIndex];\r\n        connections.push(new VConnection({\r\n          source: sourceNode,\r\n          target: targetNode,\r\n          asNEATConnection: connection\r\n        }));\r\n      });\r\n    };\r\n    \r\n    ForceVisualization.prototype.getRect = function() {\r\n      return this.svg[0][0].getClientRects()[0];\r\n    };\r\n    \r\n    ForceVisualization.prototype.startForceLayout = function() {\r\n      var svg = this.svg,\r\n          vNodes = this.vNodes,\r\n          vConnections = this.vConnections,\r\n          rect = this.getRect(),\r\n          width = rect.width,\r\n          height = rect.height;\r\n    \r\n      this.forceLayout = d3.layout.force()\r\n        .gravity(0.05)\r\n        .friction(0.9)\r\n        .charge(-200)\r\n        .linkDistance(90)\r\n        .linkStrength(function(link) {\r\n          return link.asNEATConnection.enabled;\r\n        })\r\n        .size([width, height]);\r\n    \r\n      this.forceLayout\r\n        .nodes(vNodes)\r\n        .links(vConnections)\r\n        .start();\r\n    \r\n      this.forceLayout.on(\"tick\", function() {\r\n        svg.select('.connections').selectAll('.connection')\r\n          .attr('d', function(d) {\r\n            return 'M'+d.source.x+' '+d.source.y+' '+d.target.x+' '+d.target.y;\r\n          });\r\n    \r\n        var nodes = svg.select('.nodes').selectAll('.node')\r\n          .attr(\"cx\", function(d) {\r\n            return d.x;\r\n          })\r\n          .attr(\"cy\", function(d) {\r\n            return d.y;\r\n          });\r\n    \r\n        svg.select('.labels').selectAll('.label')\r\n          .attr(\"x\", function(d, i) {\r\n            return nodes[0][i].cx.baseVal.value;\r\n          })\r\n          .attr(\"y\", function(d, i) {\r\n            return nodes[0][i].cy.baseVal.value-14;\r\n          });\r\n      });\r\n    };\r\n    \r\n    ForceVisualization.prototype.refresh = function() {\r\n      var vNodes = this.vNodes,\r\n          vConnections = this.vConnections,\r\n          animateSpeed = this.animateSpeed,\r\n          rect = this.getRect();\r\n    \r\n      this.updateVisualizationNetwork();\r\n    \r\n      this.svg.select('.draggableRect')\r\n        .attr('width', rect.width)\r\n        .attr('height', rect.height);\r\n    \r\n      function getNodeColor(e) {\r\n        if (e.asNEATNode instanceof OscillatorNode ||\r\n            e.asNEATNode instanceof NoteOscillatorNode)\r\n          return \"#28b62c\";\r\n        if (e.asNEATNode instanceof OutNode)\r\n          return \"#222\";\r\n        return \"#158cba\";\r\n      }\r\n      function getNodeStrokeColor(e) {\r\n        if (e.asNEATNode instanceof OscillatorNode ||\r\n            e.asNEATNode instanceof NoteOscillatorNode)\r\n          return \"#23a127\";\r\n        if (e.asNEATNode instanceof OutNode)\r\n          return \"#111\";\r\n        return \"#127ba3\";\r\n      }\r\n    \r\n      function getConnectionColor(e) {\r\n        if (e.asNEATConnection.enabled)\r\n          return '#111';\r\n        else\r\n          return '#aaa';\r\n      }\r\n    \r\n      function getNodeId(e) {\r\n        return e.asNEATNode.id;\r\n      }\r\n      function getConnectionId(e) {\r\n        return e.asNEATConnection.id;\r\n      }\r\n    \r\n      function getDashArray(conn) {\r\n        return conn.asNEATConnection.enabled ?\r\n          \"\" : \"5,5\";\r\n      }\r\n    \r\n      function getMarker(conn) {\r\n        return \"url(#\"+\r\n          (conn.asNEATConnection.enabled ? \"asNEAT-force-viz-enabled\" : \"asNEAT-force-viz-disabled\")+\r\n          \")\";\r\n      }\r\n    \r\n      function getNodeFilter(node) {\r\n        return node.asNEATNode.hasChanged ?\r\n          \"url(#asNEAT-force-viz-highlight)\" : \"\";\r\n      }\r\n      function getConnectionFilter(conn) {\r\n        return conn.asNEATConnection.hasChanged ?\r\n          \"url(#asNEAT-force-viz-highlight)\" : \"\";\r\n      }\r\n    \r\n      var forceLayout = this.forceLayout;\r\n      forceLayout.size([rect.width, rect.height]);\r\n      forceLayout.start();\r\n    \r\n      var connections = this.svg.select('.connections').selectAll('.connection')\r\n        .data(vConnections, getConnectionId);\r\n    \r\n      connections.enter().append(\"path\")\r\n        .attr('class', \"connection\")\r\n        .style('stroke', getConnectionColor)\r\n        .style('stroke-dasharray', getDashArray)\r\n        .attr(\"marker-end\", getMarker)\r\n        .attr('filter', getConnectionFilter)\r\n        .on(\"mouseover\", function(d, i){\r\n          parameterToolTip\r\n            .attr('x', (d.target.x+d.source.x)/2)\r\n            .attr('y', (d.target.y+d.source.y)/2);\r\n          var html = buildParameterHtml(d.asNEATConnection.getParameters());\r\n          parameterToolTipHtml\r\n            .html(html)\r\n            .style(\"display\", \"inline-block\");\r\n        })\r\n        .on(\"mouseout\", function(d) {\r\n          parameterToolTipHtml\r\n            .html('')\r\n            .style(\"display\", \"none\");\r\n        });\r\n    \r\n      connections.transition()\r\n        .duration(animateSpeed)\r\n        .style('stroke', getConnectionColor)\r\n        .style('stroke-dasharray', getDashArray)\r\n        .attr(\"marker-end\", getMarker)\r\n        .attr('filter', getConnectionFilter);\r\n    \r\n      var parameterToolTip = this.svg.select('.parameterToolTip');\r\n      var parameterToolTipHtml = parameterToolTip.select('body');\r\n    \r\n      var color = d3.scale.category20();\r\n      var node = this.svg.select('.nodes').selectAll('.node')\r\n        .data(vNodes, getNodeId);\r\n    \r\n      node.enter().append(\"circle\")\r\n        .attr(\"class\", \"node\")\r\n        .attr(\"r\", 10)\r\n        .attr('fill', getNodeColor)\r\n        .attr('stroke', getNodeStrokeColor)\r\n        .attr('filter', getNodeFilter)\r\n        .call(forceLayout.drag)\r\n        .on(\"mouseover\", function(d, i){\r\n          parameterToolTip\r\n            .attr('x', d.x)\r\n            .attr('y', d.y);\r\n          var html = buildParameterHtml(d.asNEATNode.getParameters());\r\n          parameterToolTipHtml\r\n            .html(html)\r\n            .style(\"display\", \"inline-block\");\r\n        })\r\n        .on(\"mouseout\", function(d) {\r\n          parameterToolTipHtml\r\n            .html('')\r\n            .style(\"display\", \"none\");\r\n        });\r\n      node.transition()\r\n        .duration(animateSpeed)\r\n        .attr('filter', getNodeFilter);\r\n    \r\n      var labels = this.svg.select('.labels').selectAll('.label')\r\n        .data(vNodes, getNodeId)\r\n        .enter().append('text')\r\n          .attr('class', \"label\")\r\n          .text(function(d, i) {\r\n            return getCapitals(vNodes[i].asNEATNode.name);\r\n          });\r\n    };\r\n    \r\n    function buildParameterHtml(parameters) {\r\n      return \"<div>\" +\r\n        \"<b>\"+parameters.name+\"</b> (\"+parameters.id+\")<br>\"+\r\n        _.reduce(parameters, function(result, value, key) {\r\n          if (key===\"name\" || key===\"id\")\r\n            return result;\r\n          return result+key+\": \"+\r\n            (_.isNumber(value) ?\r\n              (!isInteger(value) ?\r\n                value.toFixed(3) :\r\n                value) :\r\n              value ) +\r\n            \"<br>\";\r\n        }, \"\") +\r\n        \"</div>\";\r\n    }\r\n    \r\n    function isInteger(x) {\r\n      /*jshint -W018 */\r\n      return +x === x && !(x % 1);\r\n    }\r\n    \r\n    function getCapitals(str) {\r\n      return str.replace(/[a-z]/g, '');\r\n    }\r\n    \r\n    __exports__[\"default\"] = ForceVisualization;\n  });","define(\"asNEAT/graph\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    \r\n    var OutNode = require('asNEAT/nodes/outNode')['default'],\r\n        log = require('asNEAT/utils')['default'].log;\r\n    \r\n    \r\n    var Graph = function(parameters) {};\r\n    \r\n    Graph.longestPath = function(vNodes, vConns) {\r\n    \r\n      // Clear any data from the last longest path search\r\n      _.forEach(vNodes, function(vNode) {\r\n        vNode.cleanParameters();\r\n      });\r\n    \r\n      // Start at the output node\r\n      var outNode = _.find(vNodes, function(e) {\r\n        return e.asNEATNode instanceof OutNode;\r\n      });\r\n      \r\n      log('found outNode: '+ outNode.asNEATNode.toString());\r\n    \r\n      var stack = [];\r\n      stack = _.union(stack, Graph.getConnectionsGoingTo(outNode, vConns));\r\n    \r\n      var paths = [];\r\n      var firstPath = new Path(outNode);\r\n      outNode.longestPath = firstPath;\r\n      outNode.numHops = firstPath.getLength();\r\n      paths.push(firstPath);\r\n    \r\n      // traverse backwards along \"enabled\" connections and mark #hops on longest route\r\n      while (stack.length) {\r\n        var conn = stack.pop();\r\n    \r\n        var source = conn.source;\r\n        var target = conn.target;\r\n    \r\n        if (source.longestPath) {\r\n          log('todo collision');\r\n        }\r\n        else {\r\n          var path = target.longestPath;\r\n          \r\n          // check outNode is the last node in path\r\n          // if not, duplicate path from outNode\r\n          if (!path.isLastNode(target))\r\n            path = path.duplicateFromNode(outNode);\r\n    \r\n          path.pushNode(source);\r\n          source.numHops = path.getLength();\r\n          source.longestPath = path;\r\n        }\r\n    \r\n        // push on next connections\r\n        stack = _.union(stack, Graph.getConnectionsGoingTo(source, vConns));\r\n      }\r\n    \r\n      // foreach node increment # in hash w/ key of x & assign (h[x]-1) as YIndex;\r\n      var hash = {};\r\n      _.forEach(vNodes, function(vNode) {\r\n        var key = vNode.getLocalX(),\r\n            entry = hash[key];\r\n        if (!entry) {\r\n          entry = { value: 0 };\r\n          hash[key] = entry;\r\n        }\r\n    \r\n        vNode.hashElement = entry;\r\n        vNode.yIndex = entry.value++;\r\n      });\r\n    };\r\n    \r\n    Graph.getConnectionsGoingTo = function(target, vConnections) {\r\n      return _.filter(vConnections, function(e) {\r\n        return e.asNEATConnection.enabled && e.target === target;\r\n      });\r\n    };\r\n    \r\n    \r\n    var Path = function(vNode) {\r\n      this.nodes = [];\r\n      if (vNode)\r\n        this.pushNode(vNode);\r\n    };\r\n    Path.prototype.pushNode = function(vNode) {\r\n      this.nodes.push(vNode);\r\n    };\r\n    Path.prototype.inPath = function(vNode) {\r\n      return !!_.find(this.nodes, {'asNEATNode': vNode.asNEATNode});\r\n    };\r\n    /*\r\n      @return the number of connections in the path\r\n    */\r\n    Path.prototype.getLength = function() {\r\n      return this.nodes.length-1;\r\n    };\r\n    Path.prototype.isLastNode = function(vNode) {\r\n      return this.nodes[this.nodes.length-1]===vNode;\r\n    };\r\n    Path.prototype.duplicateFromNode = function(vNode) {\r\n      var index = _.findIndex(this.nodes, function(node) {\r\n        return node.asNEATNode === vNode.asNEATNode;\r\n      });\r\n    \r\n      var newPath = new Path();\r\n      newPath.nodes = this.nodes.slice(0, index+1);\r\n      return newPath;\r\n    };\r\n    \r\n    __exports__[\"default\"] = Graph;\n  });","define(\"asNEAT/instrumentVisualization\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var asNEAT = require('asNEAT/asNEAT')['default'],\r\n        ForceVisualization = require('asNEAT/forceVisualization')['default'],\r\n        context = asNEAT.context;\r\n    \r\n    // TODO: Clean this up... it's so bad :'(\r\n    \r\n    var scriptNodes = {};\r\n    var keep = (function() {\r\n      var nextNodeID = 1;\r\n      return function(node) {\r\n        node.id = node.id || (nextNodeID++);\r\n        scriptNodes[node.id] = node;\r\n        return node;\r\n      };\r\n    }());\r\n    var drop = function(node) {\r\n      delete scriptNodes[node.id];\r\n      return node;\r\n    };\r\n    \r\n    var InstrumentVisualization = function(parameters) {\r\n      _.defaults(this, parameters, this.defaultParameters);\r\n    };\r\n    InstrumentVisualization.prototype.defaultParameters = {\r\n      network: null,\r\n      // (num) for px, or (string) for %\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      selector: '.instrumentVisualization',\r\n    \r\n      // the colors used in the vis\r\n      colorScaleColors: ['#000000', '#ff0000', '#ffff00', '#ffffff'],\r\n      colorScalePositions: [0, 0.25, 0.75, 1],\r\n    \r\n      blankStepsUntilPause: 50\r\n    };\r\n    \r\n    var id = 0;\r\n    InstrumentVisualization.prototype.init = function() {\r\n      var canvas = document.createElement('canvas'),\r\n          ctx = canvas.getContext('2d'),\r\n          tempCanvas = document.createElement('canvas'),\r\n          tempCtx = tempCanvas.getContext('2d'),\r\n          networkDiv = document.createElement('div');\r\n      this.canvas = canvas;\r\n      this.ctx = ctx;\r\n      this.tempCanvas = tempCanvas;\r\n      this.tempCtx = tempCtx;\r\n      this.networkDiv = networkDiv;\r\n    \r\n      this.$canvas = $(canvas);\r\n      this.$tempCanvas = $(tempCanvas);\r\n      this.networkDivClass = 'network'+(++id);\r\n      $(this.selector)\r\n        .addClass('asNEATInstrumentVis');\r\n      this.$networkDiv = $(networkDiv)\r\n        .addClass(this.networkDivClass)\r\n        .addClass('asNEATInstrumentVisNetwork')\r\n        .hide();\r\n    \r\n      this.colorScale = new chroma.scale(\r\n        this.colorScaleColors,\r\n        this.colorScalePositions);\r\n      this.colorScale.domain([0, 300]);\r\n    \r\n      this.outNode = this.network.nodes[0];\r\n    };\r\n    \r\n    InstrumentVisualization.prototype.start = function() {\r\n      var self = this,\r\n          canvas = this.canvas,\r\n          ctx = this.ctx,\r\n          tempCanvas = this.tempCanvas,\r\n          tempCtx = this.tempCtx,\r\n          outNode = this.outNode,\r\n          jsNode, analyserNode;\r\n    \r\n      $(this.selector).append(this.$canvas);\r\n      $(this.selector).append(this.$networkDiv);\r\n    \r\n      this.$canvas.css({\r\n        width: this.width,\r\n        height: this.height\r\n      });\r\n      this.$tempCanvas.css({\r\n        width: this.width,\r\n        height: this.fftSize\r\n      });\r\n    \r\n      var oldBounds = self.getBounds();\r\n      this.fftSize = roundToPowerOf2(oldBounds.height);\r\n      canvas.width = oldBounds.width;\r\n      canvas.height = oldBounds.height;\r\n      tempCanvas.width =  oldBounds.width;\r\n      tempCanvas.height = this.fftSize/2;\r\n      this.onResize = function() {\r\n        var bounds = self.getBounds();\r\n        tempCtx.drawImage(canvas,\r\n          0, 0, canvas.width, canvas.height,\r\n          0, 0, tempCanvas.width, tempCanvas.height);\r\n        canvas.width = bounds.width;\r\n        canvas.height = bounds.height;\r\n        oldBounds = bounds;\r\n        clear();\r\n        ctx.drawImage(tempCanvas,\r\n          0, 0, tempCanvas.width, tempCanvas.height,\r\n          0, 0, canvas.width, canvas.height);\r\n        tempCanvas.width = bounds.width;\r\n        tempCanvas.height = self.fftSize/2;\r\n      };\r\n      $(window).on('resize', this.onResize);\r\n    \r\n      function clear() {\r\n        ctx.fillStyle=self.colorScale(0).hex();\r\n        ctx.fillRect(0,0,oldBounds.width,oldBounds.height);\r\n      }\r\n      clear();\r\n    \r\n      jsNode = keep(context.createScriptProcessor(2048, 1, 1));\r\n      jsNode.connect(context.destination);\r\n      this.jsNode = jsNode;\r\n    \r\n      analyserNode = context.createAnalyser();\r\n      analyserNode.smoothingTimeConstant = 0;\r\n      analyserNode.fftSize = this.fftSize;\r\n      this.analyserNode = analyserNode;\r\n    \r\n      // swap out outnode with custom one with\r\n      var oldNode = outNode.node;\r\n      var tempFrontGain = context.createGain();\r\n      tempFrontGain.gain.value = 1.0;\r\n    \r\n      outNode.node = tempFrontGain;\r\n      outNode.node.connect(analyserNode);\r\n      analyserNode.connect(jsNode);\r\n    \r\n      var blankArray = new Uint8Array(analyserNode.frequencyBinCount),\r\n          lastSum = 0,\r\n          numRepeats = 0,\r\n          numBlank = 0,\r\n          blankStepsUntilPause = this.blankStepsUntilPause;\r\n    \r\n      jsNode.onaudioprocess = function() {\r\n        var freqData = new Uint8Array(analyserNode.frequencyBinCount);\r\n        analyserNode.getByteFrequencyData(freqData);\r\n    \r\n        var sum = _.reduce(freqData, function(sum, val) {\r\n          return sum + val;\r\n        }, 0);\r\n    \r\n        // Send blank data if the same sum has been used more than twice\r\n        // And don't even send anything after a set number of blanks\r\n        if (sum===lastSum) {\r\n          ++numRepeats;\r\n          if (numRepeats >= 2) {\r\n            ++numBlank;\r\n            if (numBlank < blankStepsUntilPause)\r\n              self.initUpdateCanvas(blankArray);\r\n            else\r\n              clearProcessing();\r\n          }\r\n          else {\r\n            self.initUpdateCanvas(freqData);\r\n            numBlank = 0;\r\n          }\r\n        }\r\n        else {\r\n          numRepeats = 0;\r\n          numBlank = 0;\r\n          self.initUpdateCanvas(freqData);\r\n        }\r\n    \r\n        lastSum = sum;\r\n      };\r\n    \r\n      function clearProcessing() {\r\n        jsNode.onaudioprocess = null;\r\n        drop(jsNode);\r\n      }\r\n    \r\n      this.network.play();\r\n      outNode.node = oldNode;\r\n    \r\n      this.playStart();\r\n    };\r\n    \r\n    /**\r\n      @param freqData {Uint8Array}\r\n    */\r\n    InstrumentVisualization.prototype.initCanvasX = 0;\r\n    InstrumentVisualization.prototype.initUpdateCanvas = function(freqData) {\r\n      // If the initial rendering runs into live updates, don't draw anything\r\n      if (this.numUpdates + this.initCanvasX >= this.canvas.width)\r\n        return;\r\n    \r\n      var tempCtx = this.tempCtx,\r\n          colorScale = this.colorScale,\r\n          tempCanvas = this.tempCanvas,\r\n          i, len, val;\r\n    \r\n      for (i=0,len = freqData.length; i<len; ++i) {\r\n        val = freqData[i];\r\n        tempCtx.fillStyle = colorScale(val).hex();\r\n        tempCtx.fillRect(this.initCanvasX, tempCanvas.height-i, 1, 1);\r\n      }\r\n      ++this.initCanvasX;\r\n      copyFromTempCanvas.call(this);\r\n    };\r\n    \r\n    InstrumentVisualization.prototype.playStart = function() {\r\n      var self = this,\r\n          canvas = this.canvas,\r\n          ctx = this.ctx,\r\n          tempCanvas = this.tempCanvas,\r\n          tempCtx = this.tempCtx,\r\n          outNode = this.outNode,\r\n          jsNode, analyserNode;\r\n    \r\n      jsNode = keep(context.createScriptProcessor(2048, 1, 1));\r\n      jsNode.connect(context.destination);\r\n      this.jsNode = jsNode;\r\n    \r\n      analyserNode = context.createAnalyser();\r\n      analyserNode.smoothingTimeConstant = 0;\r\n      analyserNode.fftSize = this.fftSize;\r\n      this.analyserNode = analyserNode;\r\n    \r\n      outNode.node.connect(analyserNode);\r\n      analyserNode.connect(jsNode);\r\n    \r\n      var blankArray = new Uint8Array(analyserNode.frequencyBinCount),\r\n          lastSum = 0,\r\n          numAllowedRepeats = 2,\r\n          blankStepsUntilPause = this.blankStepsUntilPause,\r\n          numRepeats = blankStepsUntilPause,\r\n          numBlank = blankStepsUntilPause;\r\n    \r\n      jsNode.onaudioprocess = function() {\r\n    \r\n        var freqData = new Uint8Array(analyserNode.frequencyBinCount);\r\n        analyserNode.getByteFrequencyData(freqData);\r\n    \r\n        var sum = _.reduce(freqData, function(sum, val) {\r\n          return sum + val;\r\n        }, 0);\r\n    \r\n        // go untill a set number of blank iterations then kill the jsNode\r\n    \r\n        if (sum === lastSum) {\r\n          ++numRepeats;\r\n          ++numBlank;\r\n    \r\n          if (numRepeats >= numAllowedRepeats) {\r\n            if (numBlank < blankStepsUntilPause)\r\n              self.updateCanvas(blankArray);\r\n          }\r\n          else {\r\n            self.updateCanvas(freqData);\r\n            numBlank = 0;\r\n          }\r\n        }\r\n        else {\r\n          numRepeats = 0;\r\n          numBlank = 0;\r\n          self.updateCanvas(freqData);\r\n        }\r\n    \r\n        lastSum = sum;\r\n      };\r\n    };\r\n    \r\n    InstrumentVisualization.prototype.isShowingNetwork = false;\r\n    InstrumentVisualization.prototype.showNetwork = function() {\r\n      if(this.isShowingNetwork)\r\n        return;\r\n      this.isShowingNetwork = true;\r\n      this.$networkDiv.show();\r\n    \r\n      if (!this.forceVis) {\r\n        this.forceVis = new ForceVisualization({\r\n          network: this.network,\r\n          selector: \".\"+this.networkDivClass,\r\n          width:'100%',\r\n          height:'100%'\r\n        });\r\n        this.forceVis.init();\r\n      }\r\n    \r\n      this.forceVis.start();\r\n    };\r\n    InstrumentVisualization.prototype.hideNetwork = function() {\r\n      if(!this.isShowingNetwork)\r\n        return;\r\n      this.isShowingNetwork = false;\r\n      this.forceVis.stop();\r\n      this.$networkDiv.hide();\r\n    };\r\n    \r\n    InstrumentVisualization.prototype.stop = function() {\r\n      this.$canvas.remove();\r\n      $(window).off('resize', this.onResize);\r\n      this.jsNode.disconnect(context.destination);\r\n      this.analyserNode.disconnect(this.jsNode);\r\n      drop(this.jsNode);\r\n    };\r\n    \r\n    InstrumentVisualization.prototype.refresh = function() {\r\n      // TODO: Refresh refresh vis?\r\n      if (this.forceVis)\r\n        this.forceVis.refresh();\r\n    };\r\n    \r\n    InstrumentVisualization.prototype.numUpdates = 0;\r\n    /**\r\n      @param freqData {Uint8Array}\r\n    */\r\n    InstrumentVisualization.prototype.updateCanvas = function(freqData) {\r\n      var tempCtx = this.tempCtx,\r\n          colorScale = this.colorScale,\r\n          tempCanvas = this.tempCanvas,\r\n          i, len, val;\r\n    \r\n      // shift the temp canvas left and draw in next section\r\n      shiftTempCanvasLeft.call(this);\r\n      for (i=0,len = freqData.length; i<len; ++i) {\r\n        val = freqData[i];\r\n        tempCtx.fillStyle = colorScale(val).hex();\r\n        tempCtx.fillRect(tempCanvas.width-1, tempCanvas.height-i, 1, 1);\r\n      }\r\n    \r\n      ++this.numUpdates;\r\n      copyFromTempCanvas.call(this);\r\n    };\r\n    \r\n    InstrumentVisualization.prototype.getBounds = function() {\r\n      return this.canvas.getClientRects()[0];\r\n    };\r\n    \r\n    function shiftTempCanvasLeft() {\r\n      var tempCtx = this.tempCtx,\r\n          imageData = tempCtx.getImageData(1, 0, tempCtx.canvas.width-1, tempCtx.canvas.height);\r\n      tempCtx.putImageData(imageData, 0, 0);\r\n    }\r\n    \r\n    function copyFromTempCanvas() {\r\n      var canvas = this.canvas,\r\n          tempCanvas = this.tempCanvas;\r\n      // map temp canvas that with height=fftSize\r\n      this.ctx.drawImage(tempCanvas,\r\n        0, 0, tempCanvas.width, tempCanvas.height,\r\n        0, 0, canvas.width, canvas.height);\r\n    }\r\n    \r\n    function roundToPowerOf2(v) {\r\n      v--;\r\n      v|=v>>1;\r\n      v|=v>>2;\r\n      v|=v>>4;\r\n      v|=v>>8;\r\n      v|=v>>16;\r\n      return ++v;\r\n    }\r\n    \r\n    __exports__[\"default\"] = InstrumentVisualization;\n  });","define(\"asNEAT/liveSpectrogram\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var asNEAT = require('asNEAT/asNEAT')['default'],\r\n        context = asNEAT.context;\r\n    \r\n    // Workaround for garbageCollected jsNodes\r\n    // http://sriku.org/blog/2013/01/30/taming-the-scriptprocessornode/#replacing-gain-node-with-scriptprocessornode\r\n    var scriptNodes = {};\r\n    var keep = (function() {\r\n      var nextNodeID = 1;\r\n      return function(node) {\r\n        node.id = node.id || (nextNodeID++);\r\n        scriptNodes[node.id] = node;\r\n        return node;\r\n      };\r\n    }());\r\n    var drop = function(node) {\r\n      delete scriptNodes[node.id];\r\n      return node;\r\n    };\r\n    \r\n    var LiveSpectrogram = function(parameters) {\r\n      _.defaults(this, parameters, this.defaultParameters);\r\n    };\r\n    LiveSpectrogram.prototype.defaultParameters = {\r\n      network: null,\r\n      // (num) for px, or (string) for %\r\n      width: \"100%\",\r\n      height: 512,\r\n      selector: '.liveSpectrogram',\r\n    \r\n      // number of frequency bands in the y direction\r\n      // TODO: Update based on height*2?\r\n      fftSize: 1024,\r\n    \r\n      // the colors used in the vis\r\n      colorScaleColors: ['#000000', '#ff0000', '#ffff00', '#ffffff'],\r\n      colorScalePositions: [0, 0.25, 0.75, 1]\r\n    };\r\n    \r\n    LiveSpectrogram.prototype.init = function() {\r\n      var canvas = document.createElement('canvas'),\r\n          ctx = canvas.getContext('2d'),\r\n          tempCanvas = document.createElement('canvas'),\r\n          tempCtx = tempCanvas.getContext('2d');\r\n      this.canvas = canvas;\r\n      this.ctx = ctx;\r\n      this.tempCanvas = tempCanvas;\r\n      this.tempCtx = tempCtx;\r\n    \r\n      this.$canvas = $(canvas);\r\n      this.$tempCanvas = $(tempCanvas);\r\n    \r\n      this.colorScale = new chroma.scale(\r\n        this.colorScaleColors,\r\n        this.colorScalePositions);\r\n      this.colorScale.domain([0, 300]);\r\n    \r\n      this.outNode = this.network.nodes[0];\r\n    };\r\n    \r\n    LiveSpectrogram.prototype.start = function() {\r\n      var self = this,\r\n          canvas = this.canvas,\r\n          ctx = this.ctx,\r\n          tempCanvas = this.tempCanvas,\r\n          tempCtx = this.tempCtx,\r\n          $canvas = this.$canvas,\r\n          $tempCanvas = this.$tempCanvas,\r\n          outNode = this.outNode,\r\n          jsNode, analyserNode;\r\n    \r\n      jsNode = keep(context.createScriptProcessor(2048, 1, 1));\r\n      jsNode.connect(context.destination);\r\n      this.jsNode = jsNode;\r\n    \r\n      analyserNode = context.createAnalyser();\r\n      analyserNode.smoothingTimeConstant = 0;\r\n      analyserNode.fftSize = this.fftSize;\r\n      this.analyserNode = analyserNode;\r\n    \r\n      outNode.node.connect(analyserNode);\r\n      analyserNode.connect(jsNode);\r\n    \r\n      $(this.selector).append($canvas);\r\n    \r\n      $canvas.css({\r\n        width: this.width,\r\n        height: this.height\r\n      });\r\n      $tempCanvas.css({\r\n        width: this.width,\r\n        height: this.height\r\n      });\r\n    \r\n      this.onResize = function() {\r\n        // TODO: Scale/Copy old canvas into new resized one\r\n        var bounds = self.getBounds();\r\n        canvas.width = bounds.width;\r\n        canvas.height = bounds.height;\r\n        tempCanvas.width = bounds.width;\r\n        tempCanvas.height = bounds.height;\r\n        clearCanvas();\r\n      };\r\n      $(window).on('resize', this.onResize);\r\n      this.onResize();\r\n    \r\n      function clearCanvas() {\r\n        var bounds = self.getBounds();\r\n        ctx.fillStyle=self.colorScale(0).hex();\r\n        ctx.fillRect(0,0,canvas.width,canvas.height);\r\n      }\r\n    \r\n      var blankArray = new Uint8Array(analyserNode.frequencyBinCount),\r\n          lastSum = 0,\r\n          numRepeats = 0;\r\n    \r\n      jsNode.onaudioprocess = function() {\r\n    \r\n        var freqData = new Uint8Array(analyserNode.frequencyBinCount);\r\n        analyserNode.getByteFrequencyData(freqData);\r\n    \r\n        var sum = _.reduce(freqData, function(sum, val) {\r\n          return sum + val;\r\n        }, 0);\r\n    \r\n        // Send blank data if the same sum has been used more than twice\r\n        if (sum===lastSum) {\r\n          ++numRepeats;\r\n          if (numRepeats >= 2) {\r\n            self.updateCanvas(blankArray);\r\n          }\r\n          else\r\n            self.updateCanvas(freqData);\r\n        }\r\n        else {\r\n          numRepeats = 0;\r\n          self.updateCanvas(freqData);\r\n        }\r\n    \r\n        lastSum = sum;\r\n      };\r\n    };\r\n    \r\n    LiveSpectrogram.prototype.stop = function() {\r\n      this.$canvas.remove();\r\n      $(window).off('resize', this.onResize);\r\n      this.jsNode.disconnect(context.destination);\r\n      this.analyserNode.disconnect(this.jsNode);\r\n      drop(this.jsNode);\r\n    };\r\n    \r\n    LiveSpectrogram.prototype.refresh = function() {\r\n    \r\n    };\r\n    \r\n    /**\r\n      @param freqData {Uint8Array}\r\n    */\r\n    LiveSpectrogram.prototype.updateCanvas = function(freqData) {\r\n      var canvas = this.canvas,\r\n          tempCanvas = this.tempCanvas,\r\n          tempCtx = this.tempCtx,\r\n          ctx = this.ctx,\r\n          colorScale = this.colorScale,\r\n          bounds = this.getBounds(),\r\n          i, len, val;\r\n    \r\n      // See if the canvas even exists\r\n      if (typeof bounds === \"undefined\")\r\n        return;\r\n    \r\n      tempCtx.drawImage(canvas, 0, 0, bounds.width, bounds.height);\r\n      for (i=0,len = freqData.length; i<len; ++i) {\r\n        val = freqData[i];\r\n        ctx.fillStyle = colorScale(val).hex();\r\n        ctx.fillRect(bounds.width-1, bounds.height-i, 1, 1);\r\n      }\r\n    \r\n      ctx.translate(-1, 0);\r\n      ctx.drawImage(tempCanvas, 0, 0, tempCanvas.width, tempCanvas.height,\r\n                                0, 0, canvas.width, canvas.height);\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n    \r\n    LiveSpectrogram.prototype.getBounds = function() {\r\n      return this.canvas.getClientRects()[0];\r\n    };\r\n    \r\n    __exports__[\"default\"] = LiveSpectrogram;\n  });","define(\"asNEAT/multiVisualization\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var asNEAT = require('asNEAT/asNEAT')['default'],\r\n        context = asNEAT.context;\r\n    \r\n    var MultiVisualization = function(parameters) {\r\n      _.defaults(this, parameters, this.defaultParameters);\r\n      this.currentVisualization = this.visualizations[this.currentVisualizationIndex];\r\n    };\r\n    MultiVisualization.prototype.defaultParameters = {\r\n      network: null,\r\n      // (num) for px, or (string) for %\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      selector: '.multiVisualization',\r\n      visualizations: [],\r\n      currentVisualizationIndex: 0\r\n    };\r\n    \r\n    MultiVisualization.prototype.init = function() {\r\n      var self = this;\r\n      $(this.selector).css({\r\n        width: this.width,\r\n        height: this.height\r\n      });\r\n      _.forEach(this.visualizations, function(vis) {\r\n        vis.width = self.width;\r\n        vis.height = self.height;\r\n        vis.selector = self.selector; \r\n        vis.init();\r\n      });\r\n    };\r\n    \r\n    MultiVisualization.prototype.start = function() {\r\n      this.currentVisualization.start();\r\n    };\r\n    \r\n    MultiVisualization.prototype.stop = function() {\r\n      this.currentVisualization.stop();\r\n    };\r\n    \r\n    MultiVisualization.prototype.refresh = function() {\r\n      this.currentVisualization.refresh();\r\n    };\r\n    \r\n    MultiVisualization.prototype.nextVisualization = function() {\r\n      this.currentVisualization.stop();\r\n      this.currentVisualizationIndex = (this.currentVisualizationIndex+1)%\r\n                                          this.visualizations.length;\r\n      this.currentVisualization = this.visualizations[this.currentVisualizationIndex];\r\n      this.currentVisualization.start();\r\n    };\r\n    \r\n    __exports__[\"default\"] = MultiVisualization;\n  });","define(\"asNEAT/networkVisualization\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    \r\n    var OscillatorNode = require('asNEAT/nodes/oscillatorNode')['default'],\r\n        NoteOscillatorNode = require('asNEAT/nodes/noteOscillatorNode')['default'],\r\n        OutNode = require('asNEAT/nodes/outNode')['default'],\r\n        VNode = require('asNEAT/vNode')['default'],\r\n        VConnection = require('asNEAT/vConnection')['default'],\r\n        Graph = require('asNEAT/graph')['default'];\r\n    \r\n    var NetworkVisualization = function(parameters) {\r\n      _.defaults(this, parameters, this.defaultParameters);\r\n    \r\n      var svg = d3.select(this.selector).append('svg')\r\n        .attr('width', this.width)\r\n        .attr('height', this.height);\r\n      svg.append('g').attr('class', 'connections');\r\n      svg.append('g').attr('class', 'nodes');\r\n      svg.append('g').attr('class', 'labels');\r\n      this.svg = svg;\r\n    \r\n      this.vNodes = [];\r\n      this.vConnections = [];\r\n    \r\n      this.refresh();\r\n    \r\n      var self = this,\r\n          oldResize = window.onresize;\r\n      window.onresize = function() {\r\n        self.refresh();\r\n        if (oldResize)\r\n          oldResize();\r\n      };\r\n    };\r\n    NetworkVisualization.prototype.defaultParameters = {\r\n      network: null,\r\n      // (num) for px, or (string) for %\r\n      width: \"100%\",\r\n      height: 600,\r\n      // (num) for px\r\n      padding: 60,\r\n      selector: '.network',\r\n      animateSpeed: 750\r\n    };\r\n    \r\n    /*\r\n      creates a representation of each node/connection in the network to be shown\r\n     **/\r\n    NetworkVisualization.prototype.updateVisualizationNetwork = function() {\r\n      \r\n      var nodes = this.vNodes,\r\n          connections = this.vConnections;\r\n    \r\n      _.forEach(this.network.nodes, function(node) {\r\n        var vNode = _.find(nodes, {'asNEATNode': node});\r\n        if (vNode) return;\r\n        nodes.push(VNode.createVNodeFrom(node));\r\n      });\r\n    \r\n      _.forEach(this.network.connections, function(connection) {\r\n        var conn = _.find(connections, {'asNEATConnection': connection});\r\n        if (conn) return;\r\n    \r\n        // find the in/out nodes\r\n        var source = _.find(nodes, {'asNEATNode': connection.sourceNode}),\r\n            target = _.find(nodes, {'asNEATNode': connection.targetNode});\r\n        connections.push(new VConnection({\r\n          source: source,\r\n          target: target,\r\n          asNEATConnection: connection\r\n        }));\r\n      });\r\n    \r\n      Graph.longestPath(nodes, connections);\r\n    };\r\n    \r\n    NetworkVisualization.prototype.refresh = function() {\r\n      var vNodes = this.vNodes,\r\n          vConnections = this.vConnections,\r\n          rects = this.svg[0][0].getClientRects()[0],\r\n          width = rects.width,\r\n          height = rects.height,\r\n          padding = this.padding,\r\n          animateSpeed = this.animateSpeed;\r\n    \r\n      this.updateVisualizationNetwork();\r\n    \r\n      function getX(e,i) {\r\n        return e.getLocalX()*(width-2*padding) + padding;\r\n      }\r\n      function getY(e,i) {\r\n        return e.getLocalY()*(height-2*padding) + padding;\r\n      }\r\n    \r\n      var diff = 200;\r\n      function getInitialD(e,i) {\r\n        var x1 = getX1(e),\r\n            y1 = getY1(e);\r\n        return 'M'+x1+','+y1+' C'+x1+\r\n               ','+y1+' '+x1+','+y1+\r\n               ' '+x1+','+y1;\r\n      }\r\n      function getD(e,i) {\r\n        var x1 = getX1(e),\r\n            y1 = getY1(e),\r\n            x2 = getX2(e),\r\n            y2 = getY2(e);\r\n        return 'M'+x1+','+y1+' C'+(x1+diff)+\r\n               ','+y1+' '+(x2-diff)+','+y2+\r\n               ' '+x2+','+y2;\r\n      }\r\n      function getX1(e) {\r\n        return getX(e.source);\r\n      }\r\n      function getY1(e) {\r\n        return getY(e.source);\r\n      }\r\n      function getX2(e) {\r\n        return getX(e.target);\r\n      }\r\n      function getY2(e) {\r\n        return getY(e.target);\r\n      }\r\n    \r\n      function getNodeColor(e) {\r\n        if (e.asNEATNode instanceof OscillatorNode ||\r\n            e.asNEATNode instanceof NoteOscillatorNode)\r\n          return \"green\";\r\n        if (e.asNEATNode instanceof OutNode)\r\n          return \"black\";\r\n        return \"red\";\r\n      }\r\n    \r\n      function getConnectionColor(e) {\r\n        if (e.asNEATConnection.enabled)\r\n          return 'black';\r\n        else\r\n          return 'gray';\r\n      }\r\n    \r\n      function getConnectionId(e) {\r\n        return e.asNEATConnection.id;\r\n      }\r\n    \r\n      var dNodes = this.svg\r\n        .select('.nodes')\r\n        .selectAll('.node')\r\n        .data(vNodes);\r\n    \r\n      dNodes.transition()\r\n        .duration(animateSpeed)\r\n        .attr('cx', getX)\r\n        .attr('cy', getY)\r\n        .attr('r', 10);\r\n    \r\n      dNodes.enter().append('circle')\r\n        .attr('class', 'node')\r\n        .attr('cx', getX)\r\n        .attr('cy', getY)\r\n        .attr('r', 0)\r\n        .attr('stroke', 'black')\r\n        .attr('stroke-width', 2)\r\n        .attr('fill', getNodeColor)\r\n        .transition()\r\n          .duration(animateSpeed)\r\n          .attr('r', 10);\r\n    \r\n      // Render connections\r\n      var dConnections = this.svg\r\n          .select('.connections')\r\n          .selectAll('.connection')\r\n          .data(vConnections, getConnectionId);\r\n    \r\n      dConnections.transition()\r\n        .duration(animateSpeed)\r\n        .attr('d', getD)\r\n        .style('stroke', getConnectionColor);\r\n    \r\n      dConnections.enter().append('path')\r\n        .attr('class', 'connection')\r\n        .attr('d', getInitialD)\r\n        .attr('fill', 'none')\r\n        .style('stroke', getConnectionColor)\r\n        .style('stroke-width', 2)\r\n        .transition()\r\n          .duration(animateSpeed)\r\n          .attr('d', getD);\r\n    \r\n      var dInfo = this.svg\r\n          .select('.labels')\r\n          .selectAll('.label')\r\n          .data(vNodes);\r\n      dInfo.transition()\r\n        .duration(animateSpeed)\r\n        .attr('x', getX)\r\n        .attr('y', getY)\r\n        .text(function(e){return e.getLabel();});\r\n      dInfo.enter().append('text')\r\n        .attr('class', 'label')\r\n        .attr('x', getX)\r\n        .attr('y', getY)\r\n        .style('fill', 'red')\r\n        .text(function(e){return e.getLabel();});\r\n    \r\n    };\r\n    \r\n    __exports__[\"default\"] = NetworkVisualization;\n  });","define(\"asNEAT/offlineSpectrogram\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var asNEAT = require('asNEAT/asNEAT')['default'];\r\n    \r\n    // Workaround for garbageCollected jsNodes\r\n    // http://sriku.org/blog/2013/01/30/taming-the-scriptprocessornode/#replacing-gain-node-with-scriptprocessornode\r\n    var scriptNodes = {};\r\n    var keep = (function() {\r\n      var nextNodeID = 1;\r\n      return function(node) {\r\n        node.id = node.id || (nextNodeID++);\r\n        scriptNodes[node.id] = node;\r\n        return node;\r\n      };\r\n    }());\r\n    var drop = function(node) {\r\n      delete scriptNodes[node.id];\r\n      return node;\r\n    };\r\n    \r\n    var OfflineSpectrogram = function(parameters) {\r\n      _.defaults(this, parameters, this.defaultParameters);\r\n    };\r\n    OfflineSpectrogram.prototype.defaultParameters = {\r\n      network: null,\r\n      // (num) for px, or (string) for %\r\n      width: \"100%\",\r\n      height: 512,\r\n      selector: '.offlineSpectrogram',\r\n    \r\n      // number of frequency bands in the y direction\r\n      // TODO: Update based on height*2?\r\n      fftSize: 1024,\r\n    \r\n      // the colors used in the vis\r\n      colorScaleColors: ['#000000', '#ff0000', '#ffff00', '#ffffff'],\r\n      colorScalePositions: [0, 0.25, 0.75, 1]\r\n    };\r\n    \r\n    OfflineSpectrogram.prototype.init = function() {\r\n      var canvas = document.createElement('canvas'),\r\n          ctx = canvas.getContext('2d'),\r\n          tempCanvas = document.createElement('canvas'),\r\n          tempCtx = tempCanvas.getContext('2d');\r\n      this.canvas = canvas;\r\n      this.ctx = ctx;\r\n      this.tempCanvas = tempCanvas;\r\n      this.tempCtx = tempCtx;\r\n    \r\n      this.$canvas = $(canvas);\r\n      this.$tempCanvas = $(tempCanvas);\r\n    \r\n      this.colorScale = new chroma.scale(\r\n        this.colorScaleColors,\r\n        this.colorScalePositions);\r\n      this.colorScale.domain([0, 300]);\r\n    \r\n      this.outNode = this.network.nodes[0];\r\n    };\r\n    \r\n    OfflineSpectrogram.prototype.start = function() {\r\n      var self = this,\r\n          canvas = this.canvas,\r\n          ctx = this.ctx,\r\n          tempCanvas = this.tempCanvas,\r\n          tempCtx = this.tempCtx,\r\n          $canvas = this.$canvas,\r\n          $tempCanvas = this.$tempCanvas,\r\n          outNode = this.outNode,\r\n          jsNode, analyserNode;\r\n    \r\n      $(this.selector).append($canvas);\r\n    \r\n      $canvas.css({\r\n        width: this.width,\r\n        height: this.height\r\n      });\r\n      $tempCanvas.css({\r\n        width: this.width,\r\n        height: this.height\r\n      });\r\n    \r\n      this.onResize = function() {\r\n        // TODO: Scale/Copy old canvas into new resized one\r\n        var bounds = self.getBounds();\r\n        canvas.width = bounds.width;\r\n        canvas.height = bounds.height;\r\n        tempCanvas.width = bounds.width;\r\n        tempCanvas.height = bounds.height;\r\n        clearCanvas();\r\n      };\r\n      $(window).on('resize', this.onResize);\r\n      this.onResize();\r\n    \r\n      function clearCanvas() {\r\n        var bounds = self.getBounds();\r\n        ctx.fillStyle=self.colorScale(0).hex();\r\n        ctx.fillRect(0,0,bounds.width,bounds.height);\r\n      }\r\n    \r\n      var afterPrepHandler = function(contextPair) {\r\n        var context = contextPair.context;\r\n        self.context = context;\r\n    \r\n        jsNode = keep(context.createScriptProcessor(2048, 1, 1));\r\n        jsNode.connect(context.destination);\r\n        self.jsNode = jsNode;\r\n    \r\n        analyserNode = context.createAnalyser();\r\n        analyserNode.smoothingTimeConstant = 0;\r\n        analyserNode.fftSize = self.fftSize;\r\n        self.analyserNode = analyserNode;\r\n    \r\n        outNode.offlineNode.connect(analyserNode);\r\n        analyserNode.connect(jsNode);\r\n    \r\n        var blankArray = new Uint8Array(analyserNode.frequencyBinCount),\r\n          lastSum = 0,\r\n          numRepeats = 0;\r\n    \r\n        jsNode.onaudioprocess = function() {\r\n    \r\n        var freqData = new Uint8Array(analyserNode.frequencyBinCount);\r\n          analyserNode.getByteFrequencyData(freqData);\r\n    \r\n          var sum = _.reduce(freqData, function(sum, val) {\r\n            return sum + val;\r\n          }, 0);\r\n    \r\n          // Send blank data if the same sum has been used more than twice\r\n          if (sum===lastSum) {\r\n            ++numRepeats;\r\n            if (numRepeats >= 2) {\r\n              self.updateCanvas(blankArray);\r\n            }\r\n            else\r\n              self.updateCanvas(freqData);\r\n          }\r\n          else {\r\n            numRepeats = 0;\r\n            self.updateCanvas(freqData);\r\n          }\r\n    \r\n          lastSum = sum;\r\n        };\r\n      };\r\n    \r\n      this.network.offlinePlay(function done() {\r\n        console.log('doneRendering');\r\n      }, afterPrepHandler);\r\n    };\r\n    \r\n    OfflineSpectrogram.prototype.stop = function() {\r\n      this.$canvas.remove();\r\n      $(window).off('resize', this.onResize);\r\n      this.jsNode.disconnect(this.context.destination);\r\n      this.analyserNode.disconnect(this.jsNode);\r\n      drop(this.jsNode);\r\n    };\r\n    \r\n    OfflineSpectrogram.prototype.refresh = function() {\r\n    \r\n    };\r\n    \r\n    /**\r\n      @param freqData {Uint8Array}\r\n    */\r\n    OfflineSpectrogram.prototype.updateCanvas = function(freqData) {\r\n      var canvas = this.canvas,\r\n          tempCanvas = this.tempCanvas,\r\n          tempCtx = this.tempCtx,\r\n          ctx = this.ctx,\r\n          colorScale = this.colorScale,\r\n          bounds = this.getBounds(),\r\n          i, len, val;\r\n    \r\n      // See if the canvas even exists\r\n      if (typeof bounds === \"undefined\")\r\n        return;\r\n    \r\n      tempCtx.drawImage(canvas, 0, 0, bounds.width, bounds.height);\r\n      for (i=0,len = freqData.length; i<len; ++i) {\r\n        val = freqData[i];\r\n        ctx.fillStyle = colorScale(val).hex();\r\n        ctx.fillRect(bounds.width-1, bounds.height-i, 1, 1);\r\n      }\r\n    \r\n      ctx.translate(-1, 0);\r\n      ctx.drawImage(tempCanvas, 0, 0, bounds.width, bounds.height,\r\n                                0, 0, bounds.width, bounds.height);\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n    \r\n    OfflineSpectrogram.prototype.getBounds = function() {\r\n      return this.canvas.getClientRects()[0];\r\n    };\r\n    \r\n    __exports__[\"default\"] = OfflineSpectrogram;\n  });","define(\"asNEAT/vConnection\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var VConnection = function(parameters) {\r\n      _.defaults(this, parameters, this.defaultParameters);\r\n    };\r\n    VConnection.prototype.defaultParameters = {\r\n      inVNode: null,\r\n      outVNode: null,\r\n      \r\n      //indexes in the nodes array\r\n      source: 0,\r\n      target: 1,\r\n    \r\n      asNEATConnection: null\r\n    };\r\n    \r\n    __exports__[\"default\"] = VConnection;\n  });","define(\"asNEAT/vNode\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var VNode = function(parameters) {\r\n      _.defaults(this, parameters, this.defaultParameters);\r\n    };\r\n    VNode.prototype.defaultParameters = {\r\n      numHops: 0,\r\n      longestPath: null,\r\n      yIndex: 0,\r\n      hashElement: null,\r\n      asNEATNode: null\r\n    };\r\n    VNode.prototype.cleanParameters = function() {\r\n      this.numHops = 0;\r\n      this.longestPath = null;\r\n      this.yIndex = 0;\r\n      this.hashElement = null;\r\n    };\r\n    VNode.prototype.getLongestPathLength = function() {\r\n      return this.longestPath ? this.longestPath.getLength() : 1;\r\n    };\r\n    VNode.prototype.getNumberNodesInHash = function() {\r\n      return this.hashElement ? this.hashElement.value : 1;\r\n    };\r\n    VNode.prototype.getLocalX = function() {\r\n      return (1-this.numHops/this.getLongestPathLength());\r\n    };\r\n    VNode.prototype.getLocalY = function() {\r\n      return (this.yIndex+1)/(this.getNumberNodesInHash()+1);\r\n    };\r\n    VNode.prototype.getLabel = function() {\r\n      return '('+this.numHops+\"/\"+this.getLongestPathLength()+\r\n            ', '+this.yIndex+'/'+this.getNumberNodesInHash()+')';\r\n    };\r\n    \r\n    VNode.createVNodeFrom = function(asNEATNode) {\r\n      return new VNode({\r\n        asNEATNode: asNEATNode\r\n      });\r\n    };\r\n    \r\n    __exports__[\"default\"] = VNode;\n  });"]}